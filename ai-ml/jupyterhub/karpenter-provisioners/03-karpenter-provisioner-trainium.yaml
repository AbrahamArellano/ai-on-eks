
# NOTE: Using Ubuntu to use latest version of gpu-ts Operator, this is for time slicing enable
---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
<<<<<<<< HEAD:ai-ml/jupyterhub/karpenter-provisioners/03-karpenter-provisioner-trainium.yaml
  name: trainium
========
  name: gpu-ts
>>>>>>>> 8dde6ae6 (Jupyterhub updates with multiple profiles):ai-ml/jupyterhub/karpenter-provisioners/01-karpenter-provisioner-gpu-ts.yaml
  namespace: karpenter
spec:
  kubeletConfiguration:
    containerRuntime: containerd
  requirements:
    - key: "karpenter.sh/capacity-type"
      operator: In
      values: ["spot", "on-demand" ]
    - key: "node.kubernetes.io/instance-type" # For P4d we can use MIG since it uses A100
      operator: In
      values: ["trn1.2xlarge", "trn1.32xlarge"]
    - key: "kubernetes.io/arch"
      operator: In
      values: ["amd64"]
  providerRef:
<<<<<<<< HEAD:ai-ml/jupyterhub/karpenter-provisioners/03-karpenter-provisioner-trainium.yaml
    name: trainium
  labels:
    provisioner: trainium
    hub.jupyter.org/node-purpose: user
========
    name: gpu-ts
  labels:
    provisioner: gpu-ts
    hub.jupyter.org/node-purpose: user # This will ensure ony Jupyterhub sessions are scheduled on these nodes
    nvidia.com/device-plugin.config: nvidia-a10g # Time slicing only supports A10 GPU defined in NVIDIA Operator values file
>>>>>>>> 8dde6ae6 (Jupyterhub updates with multiple profiles):ai-ml/jupyterhub/karpenter-provisioners/01-karpenter-provisioner-gpu-ts.yaml
  taints:
    - key: aws.amazon.com/neuroncore
      effect: "NoSchedule"
    - key: aws.amazon.com/neuron
      effect: "NoSchedule"
    - key: hub.jupyter.org/dedicated # According to optimization docs https://z2jh.jupyter.org/en/latest/administrator/optimization.html
      operator: "Equal"
      value: "user"
      effect: "NoSchedule"
  ttlSecondsAfterEmpty: 120 # optional, but never scales down if not set

---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
<<<<<<<< HEAD:ai-ml/jupyterhub/karpenter-provisioners/03-karpenter-provisioner-trainium.yaml
  name: trainium
========
  name: gpu-ts
>>>>>>>> 8dde6ae6 (Jupyterhub updates with multiple profiles):ai-ml/jupyterhub/karpenter-provisioners/01-karpenter-provisioner-gpu-ts.yaml
  namespace: karpenter
spec:
  amiFamily: Ubuntu
  blockDeviceMappings:
    - deviceName: /dev/sda1
      ebs:
        volumeSize: 100Gi # Big disk for Notebook instances
        volumeType: gp3
        encrypted: true
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required
  subnetSelector:
    Name: ${cluster_name}-private*     # Name of the Subnets to spin up the nodes
  securityGroupSelector:                      # required, when not using launchTemplate
    Name: ${cluster_name}-node*     # name of the SecurityGroup to be used with Nodes
  tags:
<<<<<<<< HEAD:ai-ml/jupyterhub/karpenter-provisioners/03-karpenter-provisioner-trainium.yaml
    InstanceType: "trainium"
========
    InstanceType: "gpu-ts"
    Name: "gpu-ts-karpenter-ts"  # optional, add tags for your own use
>>>>>>>> 8dde6ae6 (Jupyterhub updates with multiple profiles):ai-ml/jupyterhub/karpenter-provisioners/01-karpenter-provisioner-gpu-ts.yaml
