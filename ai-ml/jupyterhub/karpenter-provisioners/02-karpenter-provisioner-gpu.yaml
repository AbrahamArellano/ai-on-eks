
# NOTE: Using Ubuntu to use latest version of GPU Operator, this is for time slicing enable
---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: gpu-p4d
  namespace: karpenter
spec:
  kubeletConfiguration:
    containerRuntime: containerd
  requirements:
    - key: "karpenter.sh/capacity-type"
      operator: In
      values: [ "spot", "on-demand" ]
    - key: "node.kubernetes.io/instance-type" # For P4d we can use MIG since it uses A100
      operator: In
      values: [p4d.24xlarge]
    - key: "kubernetes.io/arch"
      operator: In
      values: ["amd64"]
  providerRef:
    name: gpu-p4d
  labels:
    provisioner: gpu-p4d
    hub.jupyter.org/node-purpose: user
  taints:
    - key: nvidia.com/gpu
      effect: "NoSchedule"
  ttlSecondsAfterEmpty: 120 # optional, but never scales down if not set

---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: gpu-p4d
  namespace: karpenter
spec:
  amiFamily: Ubuntu
  blockDeviceMappings:
    - deviceName: /dev/sda1
      ebs:
        volumeSize: 100Gi # Big disk for Notebook instances
        volumeType: gp3
        encrypted: true
  userData: |
    MIME-Version: 1.0
    Content-Type: multipart/mixed; boundary="BOUNDARY"

    --BOUNDARY
    Content-Type: text/x-shellscript; charset="us-ascii"

    cat <<-EOF > /etc/profile.d/bootstrap.sh
    #!/bin/sh

    # Configure NVMe volumes in RAID0 configuration
    # https://github.com/awslabs/amazon-eks-ami/blob/056e31f8c7477e893424abce468cb32bbcd1f079/files/bootstrap.sh#L35C121-L35C126
    # Mount will be: /mnt/k8s-disks
    export LOCAL_DISKS='raid0'
    EOF

    # Source extra environment variables in bootstrap script
    sed -i '/^set -o errexit/a\\nsource /etc/profile.d/bootstrap.sh' /etc/eks/bootstrap.sh

    --BOUNDARY--
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required
  subnetSelector:
    Name: ${cluster_name}-private*     # Name of the Subnets to spin up the nodes
  securityGroupSelector:                      # required, when not using launchTemplate
    Name: ${cluster_name}-node*     # name of the SecurityGroup to be used with Nodes
  tags:
    InstanceType: "gpu-p4d"
    Name: "gpu-p4d"  # optional, add tags for your own use
