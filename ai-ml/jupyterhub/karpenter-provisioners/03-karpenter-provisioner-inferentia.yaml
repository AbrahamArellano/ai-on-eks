
# NOTE: Using Ubuntu to use latest version of GPU Operator, this is for time slicing enable
---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: inferentia
  namespace: karpenter
spec:
  kubeletConfiguration:
    containerRuntime: containerd
  requirements:
    - key: "karpenter.sh/capacity-type"
      operator: In
      values: ["spot", "on-demand" ]
    - key: "node.kubernetes.io/instance-type" # For P4d we can use MIG since it uses A100
      operator: In
      values: ["inf2.xlarge", "inf2.8xlarge", "inf2.24xlarge", "inf2.48xlarge"]
    - key: "kubernetes.io/arch"
      operator: In
      values: ["amd64"]
  providerRef:
    name: inferentia
  labels:
<<<<<<<< HEAD:ai-ml/jupyterhub/karpenter-provisioners/03-karpenter-provisioner-inferentia.yaml
    provisioner: inferentia
========
    provisioner: gpu-mig
>>>>>>>> 8dde6ae6 (Jupyterhub updates with multiple profiles):ai-ml/jupyterhub/karpenter-provisioners/02-karpenter-provisioner-gpu-mig.yaml
    hub.jupyter.org/node-purpose: user
    nvidia.com/mig.config: all-1g.5gb  # Create MIG devices with single strategy
    # nvidia.com/mig.config: all-balanced # Create MIG devices with mixed strategy
  taints:
    - key: aws.amazon.com/neuron
      effect: "NoSchedule"
    - key: hub.jupyter.org/dedicated # According to optimization docs https://z2jh.jupyter.org/en/latest/administrator/optimization.html
      operator: "Equal"
      value: "user"
      effect: "NoSchedule"
  ttlSecondsAfterEmpty: 120 # optional, but never scales down if not set

---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: inferentia
  namespace: karpenter
spec:
  amiFamily: Ubuntu
  blockDeviceMappings:
    - deviceName: /dev/sda1
      ebs:
        volumeSize: 100Gi # Big disk for Notebook instances
        volumeType: gp3
        encrypted: true
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required
  subnetSelector:
    Name: ${cluster_name}-private*     # Name of the Subnets to spin up the nodes
  securityGroupSelector:                      # required, when not using launchTemplate
    Name: ${cluster_name}-node*     # name of the SecurityGroup to be used with Nodes
  tags:
    InstanceType: "inferentia"
